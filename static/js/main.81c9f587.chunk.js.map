{"version":3,"sources":["assets/imgs/opus.png","assets/imgs/weather.png","assets/imgs/memegen.png","assets/CV/Yaron Lipshitz Full Stack Dev CV.pdf","cmps/Navbar.jsx","service/redirectService.js","cmps/ContactButtons.jsx","cmps/Footer.jsx","cmps/Hero.jsx","service/dataService.js","cmps/ProjectPreview.jsx","cmps/Projects.jsx","cmps/TechTab.jsx","cmps/Tech.jsx","cmps/Contact.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","views","elInView","location","useLocation","history","useHistory","useState","view","setView","useEffect","currView","findIndex","route","pathname","AppBar","className","position","Tabs","value","onChange","ev","val","push","aria-label","Tab","label","redirectService","onRedirect","target","redirect","console","log","window","open","ContactButtons","Tooltip","title","IconButton","onClick","Footer","Hero","display","setDisplay","scrollDownDisplay","setDropDownDisplay","setTimeout","map","word","idx","Collapse","in","timeout","toLowerCase","style","opusImg","require","weatherImg","memeImg","dataService","getTechStack","color","backgroundImg","content","text","logo","getProjects","img","description","link","tech","ProjectPreview","project","backgroundImage","default","item","Projects","projects","TechTab","props","getClassName","tab","openTab","setOpen","backgroundColor","data","Tech","tabs","setOpenTab","onTechVisible","cvLink","Contact","displayText","setDisplayText","Fade","AlternateEmail","App","heroRef","useRef","projectsRef","techRef","contactRef","setElInView","ReactGA","initialize","pageview","search","path","ref","scrollTo","current","offsetTop","scrollToRef","onPathChange","scrollCheck","isVisible","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.81c9f587.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/opus.dd2de7f6.png\";","export default __webpack_public_path__ + \"static/media/weather.f3a2c153.png\";","export default __webpack_public_path__ + \"static/media/memegen.05ed1a31.png\";","export default __webpack_public_path__ + \"static/media/Yaron Lipshitz Full Stack Dev CV.4e27aadc.pdf\";","import { AppBar, Tabs, Tab } from '@material-ui/core'\nimport React, { useEffect, useState } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\n\n\nexport default function Navbar({views, elInView}) {\n\n    const location = useLocation()\n    const history = useHistory()\n    const [view, setView] = useState(0)\n    \n    useEffect(() => {\n      const currView = views.findIndex(route => route === location.pathname)\n      if (currView < 0) return\n      setView(currView)\n    }, [location.pathname])\n\n    useEffect(() => {\n        const currView = views.findIndex(view => view === elInView)\n        if (currView < 0) return\n        setView(currView)\n    },[elInView])\n\n    function handleChange(ev,val) {\n        setView(val)\n        history.push(views[val])\n    }\n\n\n    return (\n        <nav>\n            <AppBar className=\"nav-app-bar\" position=\"static\">\n                <Tabs value={view} onChange={handleChange} aria-label=\"simple tabs example\">\n                    <Tab label=\"About\" />\n                    <Tab label=\"Projects\"  />\n                    <Tab label=\"Tech\"  />\n                    <Tab label=\"Contact\"  />\n                </Tabs>\n            </AppBar>\n\n        </nav>\n    )\n}\n","export const redirectService = {\n    onRedirect\n}\n\nfunction onRedirect(target) {\n    let redirect = ''\n    \n    switch (target) {\n        case 'mail':\n            redirect = 'mailto:lipshitzyaron@gmail.com'\n            break;\n        case 'facebook':\n            redirect = 'https://www.facebook.com/yaron.lipshitz.1'\n            break;\n        case 'linkedin':\n            redirect = 'https://www.linkedin.com/in/yaron-lipshitz-1855bb79/'\n            break;\n        case 'github':\n            redirect = 'https://github.com/yaronl219'\n            break;\n        default:\n            return console.log('unknown value')\n            \n    } \n\n    window.open(redirect)\n}","import React from 'react'\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport { IconButton, Tooltip } from '@material-ui/core';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport { redirectService } from '../service/redirectService';\n\nexport default function ContactButtons() {\n    return (\n        <div className=\"contact-btns\">\n            <Tooltip title=\"Mail me\">\n                <IconButton onClick={() => { redirectService.onRedirect('mail') }}>\n                    <MailOutlineIcon />\n                </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Linkedin\">\n                <IconButton onClick={() => { redirectService.onRedirect('linkedin') }}>\n                    <LinkedInIcon />\n                </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Github\">\n                <IconButton onClick={() => { redirectService.onRedirect('github') }}>\n                    <GitHubIcon />\n                </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Facebook\">\n                <IconButton onClick={() => { redirectService.onRedirect('facebook') }}>\n                    <FacebookIcon />\n                </IconButton>\n            </Tooltip>\n        </div>\n    )\n}\n","import React from 'react'\n\nimport ContactButtons from './ContactButtons';\n\nexport default function Footer({elInView}) {\n\n    return (\n        <div className=\"footer\">\n            <div className=\"copyrights\">\n                <small>All rights reserved</small><br />\n                <small>Yaron Lipshitz</small>\n            </div>\n            <div className={`contact-btns-container contact-${(elInView === '/contact') ? 'hidden' : 'visible'}`}>\n                <ContactButtons />\n            </div>\n        </div>\n    )\n}\n","import { Collapse } from '@material-ui/core'\nimport React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nexport function Hero() {\n\n    const timeToDisplay = 1500\n    const [display, setDisplay] = useState(false)\n    const [scrollDownDisplay, setDropDownDisplay] = useState(false)\n\n    const history = useHistory()\n\n    useEffect(() => {\n\n        setTimeout(() => {\n            setDisplay(true)\n        }, 1000)\n\n        setTimeout(() => {\n            setDropDownDisplay(true)\n        }, 5000)\n\n    }, [])\n    const tagline = ['Full', 'Stack', 'Developer']\n\n\n\n    return (\n        <section className=\"hero-section\">\n            <div className=\"hero-container\">\n                <div className=\"horizontal-cutoff\" />\n                <div className=\"hero-overlay\">\n                    <div className=\"title-container\">\n                        <h1 className=\"title\">Yaron Lipshitz</h1>\n                        {/* <h2 className=\"second\"><span><Collapse in={display} timeout={timeToDisplay*1}>Full</Collapse></span> <span><Collapse in={display} timeout={timeToDisplay*2}>Stack</Collapse></span> <span><Collapse in={display} timeout={timeToDisplay*3}>Developer</Collapse></span></h2> */}\n                        <div className=\"tagline-container\">\n                            {tagline.map((word, idx) => <Collapse in={display} key={idx} timeout={timeToDisplay * (idx + 1)}> <div className={`word ${word.toLowerCase()}`} key={idx}><h2>{word}</h2></div> </Collapse>)}\n                        </div>\n                    </div>\n                    <div className=\"about-container\">\n                        <h2>Me</h2>\n                        {/* <p>After ten years in customer-facing and management roles, the last two and half of them at a wonderful startup company, I've decided to take the plunge and switch to development.</p> */}\n                        <p>I'm very passionate about UX, Front-end development, and finding creative solutions to rising issues. <span onClick={() => {history.push('/contact')}}>Let's talk about your next project!</span></p>\n                    </div>\n                </div>\n                <div className=\"hero-placeholder\">\n                </div>\n                <div className=\"img-container\">\n                </div>\n\n            </div>\n            <div className=\"scroll-down-container\" onClick={() => {history.push('/projects')}} style={{ display: (scrollDownDisplay) ? 'block' : 'none' }}>\n                <div className=\"chevron\"></div>\n                <div className=\"chevron\"></div>\n                <div className=\"chevron\"></div>\n                <span className=\"text\">Scroll down</span>\n            </div>\n\n        </section>\n    )\n}\n","const opusImg = require('../assets/imgs/opus.png')\nconst weatherImg = require('../assets/imgs/weather.png')\n// const snakeImg = require('../assets/imgs/snake.png')\nconst memeImg = require('../assets/imgs/memegen.png')\n\n\nexport const dataService = {\n    getTechStack,\n    getProjects\n}\n\n\nfunction getProjects() {\n    return [\n        {\n            title:'Opus',\n            img: opusImg,\n            description:'A trello like project, using web sockets for instant update between users. complete with a node.js powered backend, mongoDB as a database and Cloudinary for uploading images.',\n            link: 'https://opus-sep20.herokuapp.com/',\n            tech: [\n                'React',\n                'Redux',\n                'Node.js',\n                'Websockets',\n                'Material UI',\n                'MongoDB',\n                'SCSS'\n            ]\n        },\n        {\n            title:'Weather App',\n            img: weatherImg,\n            description:'An app to display the weather using geolocation API, and storing favorites in the global state using Redux',\n            link: 'https://yaronl219.github.io/weatherapp/',\n            tech: [\n                'React',\n                'Redux',\n                'Material UI',\n                'SCSS'\n            ]\n        },\n        {\n            title:'MemeGen',\n            img: memeImg,\n            link: 'https://yaronl219.github.io/memegen/',\n            description:'A basic project using vanilla JS & Canvas, creating memes and uploading and downloading images.',\n            tech: [\n                'Vanilla JS',\n                'Canvas',\n                'HTML5',\n                'CSS'\n            ]\n        },\n        // {\n        //     title:'Snake',\n        //     img: snakeImg,\n        //     description:'A fun one day project - creating a Snake game using Vanilla JS',\n        //     link: 'https://yaronl219.github.io/Snake/',\n        //     tech: [\n        //         'Vanilla JS',\n        //         'HTML5',\n        //         'CSS',\n        //         'SVG'\n        //     ]\n        // },\n    ]\n}\n\nfunction getTechStack() {\n    \n    return [\n        {\n            title: 'Frameworks',\n            color: '#a40606',\n            backgroundImg: 'linear-gradient(315deg, #a40606 0%, #d98324 74%)',\n            content: [\n                {text:'React', logo: 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/2560px-React-icon.svg.png'},\n                {text:'NodeJS', logo: 'https://upload.wikimedia.org/wikipedia/commons/7/7e/Node.js_logo_2015.svg'},\n                {text:'Vue.js', logo: 'https://upload.wikimedia.org/wikipedia/commons/9/95/Vue.js_Logo_2.svg'},\n                {text:'Jquery', logo: 'https://upload.wikimedia.org/wikipedia/commons/f/fd/JQuery-Logo.svg'},\n                {text:'Angular', logo: 'https://upload.wikimedia.org/wikipedia/commons/c/cf/Angular_full_color_logo.svg'}\n            ]\n        },\n        {\n            title: 'Languages',\n            color: '#20bf55',\n            backgroundImg: 'linear-gradient(315deg, #20bf55 0%, #01baef 74%)',\n            content: [\n                {text:'JavaScript', logo: 'https://upload.wikimedia.org/wikipedia/commons/9/99/Unofficial_JavaScript_logo_2.svg'},\n                {text:'Python', logo:'https://upload.wikimedia.org/wikipedia/commons/0/0a/Python.svg'},\n                {text:'HTML5', logo:'https://upload.wikimedia.org/wikipedia/commons/6/61/HTML5_logo_and_wordmark.svg'},\n                {text:'CSS', logo:'https://upload.wikimedia.org/wikipedia/commons/3/3d/CSS.3.svg'},\n                {text:'SCSS', logo:'https://upload.wikimedia.org/wikipedia/commons/9/96/Sass_Logo_Color.svg'}\n            ]\n        },\n        {\n            title: 'Programs',\n            color: '#dbcbd8',\n            backgroundImg: 'linear-gradient(316deg, #dbcbd8 0%, #2e4057 74%)',\n            content: [\n                {text:'VScode', logo: 'https://upload.wikimedia.org/wikipedia/commons/9/9a/Visual_Studio_Code_1.35_icon.svg'},\n                {text:'Photoshop', logo: 'https://upload.wikimedia.org/wikipedia/commons/a/af/Adobe_Photoshop_CC_icon.svg'},\n                {text:'Illustrator', logo: 'https://upload.wikimedia.org/wikipedia/commons/f/fb/Adobe_Illustrator_CC_icon.svg'},\n                {text:'Adobe XD', logo: 'https://upload.wikimedia.org/wikipedia/commons/c/c2/Adobe_XD_CC_icon.svg'},\n                {text:'Office & Excel', logo: 'https://upload.wikimedia.org/wikipedia/commons/7/7f/Microsoft_Office_Excel_%282018%E2%80%93present%29.svg'},\n                {text:'PowerBI', logo: 'https://cdn.visualbi.com/wp-content/uploads/power-bi-logo.png'},\n            ]\n        },\n        {\n            title: 'Services',\n            color: '#fbb034',\n            backgroundImg: 'linear-gradient(315deg, #fbb034 0%, #ffdd00 74%)',\n            content: [\n                {text:'MongoDB', logo: 'https://upload.wikimedia.org/wikipedia/en/4/45/MongoDB-Logo.svg'},\n                {text:'Firebase', logo: 'https://upload.wikimedia.org/wikipedia/commons/b/bd/Firebase_Logo.png'},\n                {text:'Github', logo: 'https://upload.wikimedia.org/wikipedia/commons/e/eb/Ei-sc-github.svg'},\n                {text:'Webflow', logo: 'https://upload.wikimedia.org/wikipedia/commons/9/92/Webflow_logo.svg'},\n                {text:'AWS', logo: 'https://upload.wikimedia.org/wikipedia/commons/9/93/Amazon_Web_Services_Logo.svg'}\n            ]\n        }\n    ]\n}","import React from 'react'\n\nexport function ProjectPreview({project}) {\n\n    function onClickProject() {\n        window.open(project.link)\n    }\n\n    \n    return (\n        <div className=\"project-preview-container\">\n            <div className=\"project-img\" style={{backgroundImage:`url(${project.img.default}`}} />\n            \n            <div className=\"project-txt\">\n                <div className=\"project-title\">\n                    <h3>{project.title}</h3>\n                </div>\n                <button className=\"cta\" onClick={onClickProject}>View the project</button>\n                <div className=\"project-description\">\n                    <p>{project.description}</p>\n                </div>\n                <div className=\"tools-used-container\">\n                    <h4>Tools used</h4>\n                    <ul>\n                        {project.tech.map((item,idx) => <li key={idx}>{item}</li>)}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { dataService } from '../service/dataService'\nimport {ProjectPreview} from './ProjectPreview';\n\n\n\n\n\nexport function Projects() {\n    const projects = dataService.getProjects()\n    // const [view, setView] = useState(0)\n    // const [textDisplay, setTextDisplay] = useState(true)\n\n    // function handleChange(selectedView) {\n    //     setTextDisplay(false)\n    //     setTimeout(() => {\n    //         setView(selectedView)\n    //     },100)\n    //     setTimeout(() => {\n    //         setTextDisplay(true)\n    //     },350)\n    // }\n\n\n    \n    // projects v1\n    // return (\n    //     <section className=\"projects-container\">\n    //         <div className=\"img-carousel\">\n    //             <Carousel on showStatus={false} infiniteLoop={true} autoPlay={true} stopOnHover={true} showThumbs={false} interval={5000} onChange={handleChange}>\n    //                 {projects.map((project, idx) => <div className=\"proj-img-container\" key={idx}><div><img src={project.img.default} alt=\"project.img.title\" /></div></div>)}\n    //             </Carousel>\n    //         </div>\n            \n    //         <div className=\"proj-description\" style={{opacity:(textDisplay) ? '100%' : '0%'}}>\n    //             <h2>{projects[view].title}</h2>\n    //             <button className=\"cta-btn\" onClick={onClickProject}>View the project</button>\n    //             <div className=\"text-container\">\n    //                 <p>{projects[view].description}</p>\n    //                 <h3>Tools Used</h3>\n    //                 <ul>\n    //                     {projects[view].tech.map((tech, idx) => <li key={idx}>{tech}</li>)}\n    //                 </ul>\n    //             </div>\n    //         </div>\n    //     </section>\n    // )\n\n\n    // projects v2\n    return (\n    <section className=\"projects-container\">\n        <div className=\"project-grid\">\n            {projects.map((project,idx) => <ProjectPreview project={project} key={idx} />)}\n        </div>\n    </section>\n    )\n}\n","import React from 'react'\n\nexport function TechTab(props) {\n  \n    function getClassName() {\n        if (props.tab === props.openTab) return 'open'\n        return 'closed'\n    }\n    \n    return (\n        // <div onClick={() => props.setOpen(props.tab)} style={{ backgroundColor: props.data.color, backgroundImage:props.data.backgroundImg }} className={`tab tab-${getClassName()}`}>\n        <div onClick={() => props.setOpen(props.tab)} style={{ backgroundColor: props.data.color }} className={`tab tab-${getClassName()}`}>\n            <div className=\"cutoff-placeholder\" />\n            <div className={`title title-${getClassName()}`}>\n                <h2>\n                    {props.data.title}\n                </h2>\n            </div>\n            <div className={`content content-${getClassName()}`}>\n                <ul>\n                    {props.data.content.map((item, idx) => <li \n                    key={idx}>\n                        <div className=\"item-img\" style={{backgroundImage:`url(${item.logo})`}} />\n                            \n                        {/* <img src={item.logo} \n                        alt={item.text}/\n                        ></div> */}\n                        <div className=\"item-text\">\n                            {item.text}\n                            </div>\n                            </li>)}\n                </ul>\n            </div>\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport ReactVisibilitySensor from 'react-visibility-sensor';\nimport { dataService } from '../service/dataService';\nimport { TechTab } from './TechTab';\n\n\nexport function Tech(props) {\n\n    const tabs = dataService.getTechStack()\n    const [openTab, setOpenTab] = useState(0)\n\n    return (\n        <section className=\"tech-container\">\n            <ReactVisibilitySensor  onChange={props.onTechVisible}>\n                <div className=\"horizontal-cutoff\" />\n            </ReactVisibilitySensor>\n            {tabs.map((tab, idx) => <TechTab setOpen={setOpenTab} openTab={openTab} data={tab} tab={idx} key={idx} />)}\n        </section>\n    )\n}\n","import { Fade } from '@material-ui/core'\nimport { AlternateEmail, Facebook, GitHub, LinkedIn } from '@material-ui/icons'\nimport React, { useEffect, useState } from 'react'\nimport PersonIcon from '@material-ui/icons/Person';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport { redirectService } from '../service/redirectService';\nconst cvLink = require('../assets/CV/Yaron Lipshitz Full Stack Dev CV.pdf')\n\nexport function Contact({elInView}) {\n\n    // const [isInView, setInView] = useState(false)\n    const [displayText, setDisplayText] = useState(false)\n    // const location = useLocation()\n\n    useEffect(() => {\n        if (elInView === '/contact') {\n            // setInView(true)\n                setDisplayText(true)\n            // setTimeout(() => {\n                //     setDisplayText(true)\n            // }, 1000)\n        }\n        return () => {\n\n            // setInView(false)\n            setDisplayText(false)\n\n        }\n    }, [elInView])\n\n    function onClickChat() {\n        window.open('https://api.whatsapp.com/send?phone=972525595204')\n    }\n    return (\n        <section className=\"contact-section\">\n            {/* <div className={`background ${(isInView) ? 'background-regular' : 'background-wide'}`} /> */}\n            \n            <Fade in={displayText}>\n                <div className=\"content-container\">\n                    <div className=\"call-to-action\">\n                        <h2>Let's <span onClick={onClickChat}>Chat!</span></h2>\n                        <h3>I'm currently seeking a position as a Front-End or Fullstack Developer</h3>\n                        <button className=\"cta\" onClick={() => {window.open(cvLink.default)}}>Download my CV</button>\n                    </div>\n                    <div className=\"contact-info-container\">\n                        <div className=\"contact-info\">\n                            <ul>\n                                <li><PersonIcon />Yaron Lipshitz</li>\n                                <li><AlternateEmail />lipshitzyaron@gmail.com</li>\n                                <li><PhoneIcon />+972-52-5595-204</li>\n                            </ul>\n                        </div>\n                        <div className=\"contact-btns\">\n                            <ul>\n                                <li onClick={() => {redirectService.onRedirect('linkedin')}}><LinkedIn />Linkedin</li>\n                                <li onClick={() => {redirectService.onRedirect('github')}}><GitHub />Github</li>\n                                <li onClick={() => {redirectService.onRedirect('facebook')}}><Facebook />Facebook</li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </Fade>\n        </section>\n    )\n}\n","import './assets/styles/global.scss'\nimport Navbar from './cmps/Navbar';\nimport Footer from './cmps/Footer';\nimport { Hero } from './cmps/Hero';\nimport { Projects } from './cmps/Projects';\nimport { Tech } from './cmps/Tech';\nimport { Contact } from './cmps/Contact';\nimport React, { useState } from 'react';\nimport { useEffect, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport ReactVisibilitySensor from 'react-visibility-sensor';\nimport ReactGA from 'react-ga';\n\n\nfunction App() {\n\n  const location = useLocation()\n  const heroRef = useRef()\n  const projectsRef = useRef()\n  const techRef = useRef()\n\n  const contactRef = useRef()\n  const views = ['/', '/projects', '/tech', '/contact']\n  const [elInView, setElInView] = useState('/')\n  const scrollToRef = (ref) => window.scrollTo(0, ref.current.offsetTop)\n\n  ReactGA.initialize('G-B3YC07Q3DX');\nReactGA.pageview(window.location.pathname + window.location.search);\n\n  useEffect(() => {\n    onPathChange(location.pathname)\n  }, [location.pathname])\n\n  function onPathChange(path) {\n    let ref;\n    switch (path) {\n      case '/projects':\n        ref = projectsRef\n        break;\n      case '/tech':\n        ref = techRef\n        break;\n      case '/contact':\n        ref = contactRef\n        break;\n      default:\n        ref = heroRef\n    }\n    \n    scrollToRef(ref)\n  }\n\n\n  function onHeroVisible(isVisible) {\n    if (isVisible) return setElInView('/')\n  }\n\n  function onProjectsVisible(isVisible) {\n    if (isVisible) return setElInView('/projects')\n  }\n\n  function onTechVisible(isVisible) {\n    if (isVisible) return setElInView('/tech')\n  }\n\n  function onContactVisible(isVisible) {\n    if (isVisible) return setElInView('/contact')\n  }\n\n\n  return (\n    \n    <div className=\"App\">\n      <header className=\"app-header\">\n        <Navbar views={views} elInView={elInView} />\n      </header>\n      <main className=\"main\">\n        {/* <ViewRouter views={views}/> */}\n        <ReactVisibilitySensor scrollCheck onChange={onHeroVisible}>\n          <div className=\"hero-ref\" ref={heroRef}>\n            <Hero />\n          </div>\n        </ReactVisibilitySensor>\n        <ReactVisibilitySensor scrollCheck onChange={onProjectsVisible}>\n          <div className=\"projects-ref\" ref={projectsRef}>\n            <Projects />\n          </div>\n        </ReactVisibilitySensor>\n          <div className=\"tech-ref\" ref={techRef}>\n            <Tech onTechVisible={onTechVisible} />\n          </div>\n        <ReactVisibilitySensor scrollCheck onChange={onContactVisible}>\n          <div className=\"contact-ref\" ref={contactRef}>\n            <Contact elInView={elInView}/>\n          </div>\n        </ReactVisibilitySensor>\n\n      </main>\n      <footer>\n        <Footer elInView={elInView}/>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}